generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model cart {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String   @db.Uuid
  product_id String   @db.Uuid
  quantity   Int
  added_date DateTime @db.Timestamp(6)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  product    product  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model category {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String    @db.VarChar(255)
  description String?   @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  product     product[]
}

model company {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description  String?   @db.VarChar(255)
  address      String?   @db.VarChar(255)
  phone_number String?   @db.VarChar(255)
  website      String?   @db.VarChar(255)
  name         String    @db.VarChar(255)
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime  @default(now()) @db.Timestamp(6)
  user_id      String    @db.Uuid
  tenant_id    String    @db.VarChar(255)
  user         user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product      product[]
}

model order {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id     String   @db.Uuid
  product_id  String   @db.Uuid
  quantity    Int
  total_price Int
  order_date  DateTime @db.Timestamp(6)
  status      String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  product     product  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model product {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String   @db.VarChar(255)
  description String?  @db.VarChar(255)
  price       Int
  stock       Int
  company_id  String   @db.Uuid
  category_id String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  cart        cart[]
  order       order[]
  category    category @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  company     company  @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  cart        cart[]
  company     company[]
  order       order[]
}
